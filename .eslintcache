[{"/Users/litebox/Documents/websites/portal.fusebit.io/src/index.tsx":"1","/Users/litebox/Documents/websites/portal.fusebit.io/src/App.tsx":"2","/Users/litebox/Documents/websites/portal.fusebit.io/src/theme/appTheme.ts":"3","/Users/litebox/Documents/websites/portal.fusebit.io/src/utils/constants.ts":"4","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/useContext.ts":"5","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Layout.tsx":"6","/Users/litebox/Documents/websites/portal.fusebit.io/src/config/index.ts":"7","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Navbar/index.ts":"8","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Navbar/Navbar.tsx":"9","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Navbar/styles.ts":"10","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/index.ts":"11","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Connectors.tsx":"12","/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/ConnectorsPage.tsx":"13","/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/IntegrationsPage.tsx":"14","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/index.ts":"15","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Integrations.tsx":"16","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/globalStyle.ts":"17","/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/IntegrationDetailPage.tsx":"18","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/index.ts":"19","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/IntegrationDetail.tsx":"20","/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/ConnectorDetailPage.tsx":"21","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/ConnectorDetail/index.ts":"22","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/ConnectorDetail/ConnectorDetail.tsx":"23","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/ConnectorDetail/Configure/index.ts":"24","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/ConnectorDetail/Configure/Configure.tsx":"25","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/ConnectorDetail/Configure/styles.ts":"26","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/TabComponent/index.ts":"27","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/TabComponent/TabComponent.tsx":"28","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/TabComponent/styles.ts":"29","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Overview/index.ts":"30","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Overview/Overview.tsx":"31","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Overview/styles.ts":"32","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Overview/index.ts":"33","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Overview/Overview.tsx":"34","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Overview/styles.ts":"35","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/index.ts":"36","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Develop.tsx":"37","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/styles.ts":"38","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Connect/index.ts":"39","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Connect/Connect.tsx":"40","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Connect/styles.ts":"41","/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/AuthCallback.tsx":"42","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v1/account/user/useGetOne.ts":"43","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/useAxios.ts":"44","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/integration/useGetAll.ts":"45","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/integration/useCreateOne.ts":"46","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/connector/useGetOne.ts":"47","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/integration/useGetOne.ts":"48","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/connector/useGetAll.ts":"49","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/useLoader.ts":"50","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/integration/useDeleteOne.ts":"51","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/connector/useDeleteOne.ts":"52","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/connector/useCreateOne.ts":"53","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Edit/index.ts":"54","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Edit/Edit.tsx":"55","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Edit/styles.ts":"56","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v1/account/user/useCreateToken.ts":"57","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/integration/useUpdateOne.ts":"58","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v1/account/useGetOne.ts":"59","/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/useError.ts":"60","/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/LoggedOutErrorPage.tsx":"61","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/LoggedOutError/LoggedOutError.tsx":"62","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/LoggedOutError/styles.ts":"63","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/FatalError/index.ts":"64","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/FatalError/FatalError.tsx":"65","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/FatalError/styles.ts":"66","/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/AuthenticationPage.tsx":"67","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Authentication/Authentication.tsx":"68","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Authentication/Users/index.ts":"69","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Authentication/Users/Users.tsx":"70","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Authentication/Users/styles.ts":"71","/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/NotFoundPage.tsx":"72","/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/FatalErrorPage.tsx":"73","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Overview/AddIntegration/index.ts":"74","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Overview/AddIntegration/AddIntegration.tsx":"75","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Overview/AddIntegration/styles.ts":"76","/Users/litebox/Documents/websites/portal.fusebit.io/src/static/feed.tsx":"77","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Overview/AddConnector/index.ts":"78","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Overview/AddConnector/AddConnector.tsx":"79","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Overview/AddConnector/styles.ts":"80"},{"size":197,"mtime":1624368904216,"results":"81","hashOfConfig":"82"},{"size":1377,"mtime":1626295814551,"results":"83","hashOfConfig":"82"},{"size":1103,"mtime":1626794497284,"results":"84","hashOfConfig":"82"},{"size":44,"mtime":1624368904218,"results":"85","hashOfConfig":"82"},{"size":1134,"mtime":1626295814557,"results":"86","hashOfConfig":"82"},{"size":677,"mtime":1625078121029,"results":"87","hashOfConfig":"82"},{"size":1651,"mtime":1626295975417,"results":"88","hashOfConfig":"82"},{"size":35,"mtime":1624385810996,"results":"89","hashOfConfig":"82"},{"size":17805,"mtime":1626295814557,"results":"90","hashOfConfig":"82"},{"size":9198,"mtime":1625605079310,"results":"91","hashOfConfig":"82"},{"size":39,"mtime":1624393794726,"results":"92","hashOfConfig":"82"},{"size":339,"mtime":1626279592388,"results":"93","hashOfConfig":"82"},{"size":414,"mtime":1626295814560,"results":"94","hashOfConfig":"82"},{"size":428,"mtime":1626295814561,"results":"95","hashOfConfig":"82"},{"size":41,"mtime":1624470784207,"results":"96","hashOfConfig":"82"},{"size":343,"mtime":1624651278596,"results":"97","hashOfConfig":"82"},{"size":222,"mtime":1626293022179,"results":"98","hashOfConfig":"82"},{"size":991,"mtime":1626295814560,"results":"99","hashOfConfig":"82"},{"size":46,"mtime":1624474339909,"results":"100","hashOfConfig":"82"},{"size":438,"mtime":1624651776450,"results":"101","hashOfConfig":"82"},{"size":941,"mtime":1626295814559,"results":"102","hashOfConfig":"82"},{"size":45,"mtime":1624638751830,"results":"103","hashOfConfig":"82"},{"size":393,"mtime":1624650153365,"results":"104","hashOfConfig":"82"},{"size":38,"mtime":1624647155782,"results":"105","hashOfConfig":"82"},{"size":4373,"mtime":1626797964960,"results":"106","hashOfConfig":"82"},{"size":1485,"mtime":1625671188408,"results":"107","hashOfConfig":"82"},{"size":41,"mtime":1624649732950,"results":"108","hashOfConfig":"82"},{"size":2414,"mtime":1625658455436,"results":"109","hashOfConfig":"82"},{"size":1558,"mtime":1625658422242,"results":"110","hashOfConfig":"82"},{"size":37,"mtime":1624650479258,"results":"111","hashOfConfig":"82"},{"size":13547,"mtime":1626727806922,"results":"112","hashOfConfig":"82"},{"size":2319,"mtime":1625667779386,"results":"113","hashOfConfig":"82"},{"size":38,"mtime":1624651026520,"results":"114","hashOfConfig":"82"},{"size":13795,"mtime":1626727182347,"results":"115","hashOfConfig":"82"},{"size":2319,"mtime":1625667789417,"results":"116","hashOfConfig":"82"},{"size":36,"mtime":1624651475947,"results":"117","hashOfConfig":"82"},{"size":16079,"mtime":1626179654247,"results":"118","hashOfConfig":"82"},{"size":4997,"mtime":1625758172364,"results":"119","hashOfConfig":"82"},{"size":37,"mtime":1624899505092,"results":"120","hashOfConfig":"82"},{"size":1617,"mtime":1624906837626,"results":"121","hashOfConfig":"82"},{"size":1721,"mtime":1625758988865,"results":"122","hashOfConfig":"82"},{"size":2285,"mtime":1625256325135,"results":"123","hashOfConfig":"82"},{"size":432,"mtime":1625084851817,"results":"124","hashOfConfig":"82"},{"size":1833,"mtime":1626295814557,"results":"125","hashOfConfig":"82"},{"size":484,"mtime":1625059045746,"results":"126","hashOfConfig":"82"},{"size":719,"mtime":1625059045745,"results":"127","hashOfConfig":"82"},{"size":491,"mtime":1625059045744,"results":"128","hashOfConfig":"82"},{"size":497,"mtime":1625059045746,"results":"129","hashOfConfig":"82"},{"size":478,"mtime":1625059045744,"results":"130","hashOfConfig":"82"},{"size":1942,"mtime":1625256325145,"results":"131","hashOfConfig":"82"},{"size":726,"mtime":1625059045745,"results":"132","hashOfConfig":"82"},{"size":718,"mtime":1625059045743,"results":"133","hashOfConfig":"82"},{"size":711,"mtime":1625059045743,"results":"134","hashOfConfig":"82"},{"size":34,"mtime":1625064054673,"results":"135","hashOfConfig":"82"},{"size":5450,"mtime":1625770565190,"results":"136","hashOfConfig":"82"},{"size":5152,"mtime":1625770725600,"results":"137","hashOfConfig":"82"},{"size":566,"mtime":1625255798626,"results":"138","hashOfConfig":"82"},{"size":747,"mtime":1626117888480,"results":"139","hashOfConfig":"82"},{"size":396,"mtime":1625084851817,"results":"140","hashOfConfig":"82"},{"size":2251,"mtime":1625248694542,"results":"141","hashOfConfig":"82"},{"size":331,"mtime":1626295814562,"results":"142","hashOfConfig":"82"},{"size":1201,"mtime":1626295814555,"results":"143","hashOfConfig":"82"},{"size":1478,"mtime":1626274214996,"results":"144","hashOfConfig":"82"},{"size":40,"mtime":1626277867106,"results":"145","hashOfConfig":"82"},{"size":1035,"mtime":1626295814554,"results":"146","hashOfConfig":"82"},{"size":1273,"mtime":1626278541891,"results":"147","hashOfConfig":"82"},{"size":420,"mtime":1626296030275,"results":"148","hashOfConfig":"82"},{"size":350,"mtime":1626287204903,"results":"149","hashOfConfig":"82"},{"size":35,"mtime":1626287179487,"results":"150","hashOfConfig":"82"},{"size":12430,"mtime":1626293192375,"results":"151","hashOfConfig":"82"},{"size":2576,"mtime":1626293051774,"results":"152","hashOfConfig":"82"},{"size":301,"mtime":1626295814562,"results":"153","hashOfConfig":"82"},{"size":421,"mtime":1626295814560,"results":"154","hashOfConfig":"82"},{"size":44,"mtime":1626361690040,"results":"155","hashOfConfig":"82"},{"size":7433,"mtime":1626798567156,"results":"156","hashOfConfig":"82"},{"size":4553,"mtime":1626797288800,"results":"157","hashOfConfig":"82"},{"size":19293,"mtime":1626800948264,"results":"158","hashOfConfig":"82"},{"size":41,"mtime":1626727676396,"results":"159","hashOfConfig":"82"},{"size":7398,"mtime":1626800881469,"results":"160","hashOfConfig":"82"},{"size":4558,"mtime":1626800798819,"results":"161","hashOfConfig":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"1pryeid",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"164"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"164"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/litebox/Documents/websites/portal.fusebit.io/src/index.tsx",[],["325","326"],"/Users/litebox/Documents/websites/portal.fusebit.io/src/App.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/theme/appTheme.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/utils/constants.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/useContext.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Layout.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/config/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Navbar/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Navbar/Navbar.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Navbar/styles.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Connectors.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/ConnectorsPage.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/IntegrationsPage.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Integrations.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/globalStyle.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/IntegrationDetailPage.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/IntegrationDetail.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/ConnectorDetailPage.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/ConnectorDetail/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/ConnectorDetail/ConnectorDetail.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/ConnectorDetail/Configure/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/ConnectorDetail/Configure/Configure.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/ConnectorDetail/Configure/styles.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/TabComponent/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/TabComponent/TabComponent.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/TabComponent/styles.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Overview/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Overview/Overview.tsx",["327"],"import React from \"react\";\nimport * as SC from \"./styles\";\nimport { Table, TableBody, TableCell, TableHead, TableRow, Button, Checkbox, IconButton, Tooltip, Modal, Backdrop } from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useContext } from \"../../../hooks/useContext\";\nimport { useLoader } from \"../../../hooks/useLoader\";\nimport { useAccountConnectorsGetAll } from \"../../../hooks/api/v2/account/connector/useGetAll\";\nimport { useAccountConnectorCreateConnector } from \"../../../hooks/api/v2/account/connector/useCreateOne\";\nimport { useAccountConnectorDeleteConnector } from \"../../../hooks/api/v2/account/connector/useDeleteOne\";\nimport { Operation } from \"../../../interfaces/operation\";\nimport { Connector } from \"../../../interfaces/connector\";\nimport { useError } from \"../../../hooks/useError\";\nimport arrowRight from \"../../../assets/arrow-right.svg\";\nimport arrowLeft from \"../../../assets/arrow-left.svg\";\nimport AddConnector from \"./AddConnector\";\n\nenum cells {\n    TYPE = \"Type\",\n    IDENTITIES = \"Identities\",\n    CREATED = \"Created\",\n}\n\nconst Overview: React.FC = () => {\n    const [selected, setSelected] = React.useState<string[]>([]);\n    const [rows, setRows] = React.useState<Connector[]>([]);\n    const { userData } = useContext();\n    const { data: connectors, refetch: reloadConnectors } = useAccountConnectorsGetAll<{ items: Connector[] }>({ enabled: userData.token, accountId: userData.accountId, subscriptionId: userData.subscriptionId });\n    const createConnector = useAccountConnectorCreateConnector<Operation>();\n    const deleteConnector = useAccountConnectorDeleteConnector<Operation>();\n    const { waitForOperations, createLoader, removeLoader } = useLoader();\n    const { createError } = useError();\n    const [selectedCell, setSelectedCell] = React.useState<cells>(cells.TYPE);\n    const [addConnectorOpen, setAddConnectorOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        if (connectors && connectors.data.items) {\n            const items = connectors.data.items;\n            setRows(items);\n        }\n    }, [connectors]);\n\n    const handleSelectAllCheck = (event: any) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((row) => row.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleCheck = (event: any, id: string) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected: string[] = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n\n    const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n    const handleRowDelete = async () => {\n        try {\n            createLoader();\n            let operationIds: string[] = [];\n            for (let i = 0; i < selected.length; i++) {\n                const response = await deleteConnector.mutateAsync({ id: selected[i], accountId: userData.accountId, subscriptionId: userData.subscriptionId });\n                operationIds.push(response.data.operationId);\n            }\n            await waitForOperations(operationIds);\n            reloadConnectors();\n            setSelected([]);\n        } catch (e) {\n            createError(e.message);\n        } finally {\n            removeLoader();\n        }\n    }\n\n    const handleRowClick = (event: any, href: string) => {\n        // TODO: check if the user has auth to edit this row before sending him there, and if not send this error\n        // if (has auth) {\n        //     if (!event.target.id) {\n        //         window.location.href = href;\n        //     }\n        // } else {\n        //     createError(\"You don't have sufficient permissions to edit connector {connector}.  Please contact an account administrator.\");\n        // }\n        if (!event.target.id) {\n            window.location.href = href;\n        }\n    }\n\n    // const _createConnector = async () => {\n    //     try {\n    //         createLoader();\n    //         const response = await createConnector.mutateAsync({ id: String(new Date().getTime()), accountId: userData.accountId, subscriptionId: userData.subscriptionId });\n    //         await waitForOperations([response.data.operationId]);\n    //         reloadConnectors();\n    //     } catch (e) {\n    //         createError(e.message);\n    //     } finally {\n    //         removeLoader();\n    //     }\n    // }\n\n    const handlePreviousCellSelect = () => {\n        if (selectedCell === cells.TYPE) {\n            setSelectedCell(cells.CREATED);\n        } else if (selectedCell === cells.CREATED) {\n            setSelectedCell(cells.IDENTITIES);\n        } else {\n            setSelectedCell(cells.TYPE);\n        }\n    }\n\n    const handleNextCellSelect = () => {\n        if (selectedCell === cells.TYPE) {\n            setSelectedCell(cells.IDENTITIES);\n        } else if (selectedCell === cells.IDENTITIES) {\n            setSelectedCell(cells.CREATED);\n        } else {\n            setSelectedCell(cells.TYPE);\n        }\n    }\n\n    return (\n        <>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                open={addConnectorOpen}\n                onClose={() => setAddConnectorOpen(false)}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n            >\n                <AddConnector open={addConnectorOpen} onClose={() => setAddConnectorOpen(false)} />\n            </Modal>\n            <SC.ButtonContainer>\n                <SC.ButtonMargin>\n                    <Button onClick={() => setAddConnectorOpen(true)} startIcon={<AddIcon />} variant=\"outlined\" color=\"primary\" size=\"large\">New Connector</Button>\n                </SC.ButtonMargin>\n            </SC.ButtonContainer>\n            <SC.DeleteWrapper active={selected.length > 0}>\n                {\n                    selected.length > 0 && (\n                        <>\n                            {selected.length} selected\n                            <SC.DeleteIconWrapper>\n                                <Tooltip title=\"Delete\">\n                                    <IconButton onClick={handleRowDelete}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </SC.DeleteIconWrapper>\n                        </>\n                    )\n                }\n            </SC.DeleteWrapper>\n            <SC.Table>\n                <Table size=\"small\" aria-label=\"Overview Table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell padding=\"checkbox\">\n                                <Checkbox\n                                    color=\"primary\"\n                                    checked={rows.length > 0 && selected.length === rows.length}\n                                    onChange={handleSelectAllCheck}\n                                    inputProps={{ 'aria-label': 'select all connectors' }}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <SC.Flex>\n                                    <SC.ArrowUp />\n                                    Name\n                                </SC.Flex>\n                            </TableCell>\n                            <TableCell align=\"left\">Type</TableCell>\n                            <TableCell align=\"left\">Identities</TableCell>\n                            <TableCell align=\"left\">Created</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => (\n                            <SC.Row key={row.id} onClick={(e) => handleRowClick(e, \"/connector/\" + row.id)}>\n                                <TableCell style={{ cursor: \"default\" }} padding=\"checkbox\" id={`enhanced-table-cell-checkbox-${row.id}`}>\n                                    <Checkbox\n                                        color=\"primary\"\n                                        onClick={(event) => handleCheck(event, row.id)}\n                                        checked={isSelected(row.id)}\n                                        inputProps={{ 'aria-labelledby': `enhanced-table-checkbox-${row.id}` }}\n                                        id={`enhanced-table-checkbox-${row.id}`}\n                                    />\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <SC.CellName>\n                                        {row.id}\n                                    </SC.CellName>\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    Slack\n                                    {// TODO: Replace placeholder with real data\n                                    }\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    5\n                                    {// TODO: Replace placeholder with real data\n                                    }\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {new Date().toISOString().slice(0, 10)}\n                                    {// TODO: Replace placeholder with real data\n                                    }\n                                </TableCell>\n                            </SC.Row>\n                        ))}\n                    </TableBody>\n                </Table>\n            </SC.Table>\n            <SC.TableMobile>\n                <Table size=\"small\" aria-label=\"Overview Table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell padding=\"checkbox\">\n                                <Checkbox\n                                    color=\"primary\"\n                                    checked={rows.length > 0 && selected.length === rows.length}\n                                    onChange={handleSelectAllCheck}\n                                    inputProps={{ 'aria-label': 'select all connectors' }}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <SC.Flex>\n                                    <SC.ArrowUp />\n                                    Name\n                                </SC.Flex>\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                <SC.TableCellMobile>\n                                    <p>{selectedCell}</p>\n                                    <SC.LeftArrow onClick={handlePreviousCellSelect} src={arrowLeft} alt=\"previous-cell\" height=\"16\" width=\"16\" />\n                                    <SC.RightArrow onClick={handleNextCellSelect} src={arrowRight} alt=\"next-cell\" height=\"16\" width=\"16\" />\n                                </SC.TableCellMobile>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => (\n                            <SC.Row key={row.id} onClick={(e) => handleRowClick(e, \"/connector/\" + row.id)}>\n                                <TableCell style={{ cursor: \"default\" }} padding=\"checkbox\" id={`enhanced-table-cell-checkbox-${row.id}`}>\n                                    <Checkbox\n                                        color=\"primary\"\n                                        onClick={(event) => handleCheck(event, row.id)}\n                                        checked={isSelected(row.id)}\n                                        inputProps={{ 'aria-labelledby': `enhanced-table-checkbox-${row.id}` }}\n                                        id={`enhanced-table-checkbox-${row.id}`}\n                                    />\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <SC.CellName>\n                                        {row.id}\n                                    </SC.CellName>\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {selectedCell === cells.TYPE ? \"Slack\" : selectedCell === cells.IDENTITIES ? 10 : new Date().toISOString().slice(0, 10)}\n                                    {// TODO: Replace placeholder with real data\n                                    }\n                                </TableCell>\n                            </SC.Row>\n                        ))}\n                    </TableBody>\n                </Table>\n            </SC.TableMobile>\n        </>\n    )\n}\n\nexport default Overview;","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Overview/styles.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Overview/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Overview/Overview.tsx",["328"],"import React, { useEffect } from \"react\";\nimport * as SC from \"./styles\";\nimport { Table, TableBody, TableCell, TableHead, TableRow, Button, Checkbox, IconButton, Tooltip, Modal, Backdrop } from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useContext } from \"../../../hooks/useContext\";\nimport { useLoader } from \"../../../hooks/useLoader\";\nimport { useAccountIntegrationsGetAll } from \"../../../hooks/api/v2/account/integration/useGetAll\";\nimport { useAccountIntegrationCreateIntegration } from \"../../../hooks/api/v2/account/integration/useCreateOne\";\nimport { useAccountIntegrationDeleteIntegration } from \"../../../hooks/api/v2/account/integration/useDeleteOne\";\nimport { Integration } from \"../../../interfaces/integration\";\nimport { Operation } from \"../../../interfaces/operation\";\nimport { useError } from \"../../../hooks/useError\";\nimport arrowRight from \"../../../assets/arrow-right.svg\";\nimport arrowLeft from \"../../../assets/arrow-left.svg\";\nimport AddIntegration from \"./AddIntegration\";\n\nenum cells {\n    INSTANCES = \"Instances\",\n    CREATED = \"Created\",\n    DEPLOYED = \"Deployed\",\n}\n\nconst Overview: React.FC = () => {\n    const [selected, setSelected] = React.useState<string[]>([]);\n    const [rows, setRows] = React.useState<Integration[]>([]);\n    const { userData } = useContext();\n    const { data: integrations, refetch: reloadIntegrations } = useAccountIntegrationsGetAll<{ items: Integration[] }>({ enabled: userData.token, accountId: userData.accountId, subscriptionId: userData.subscriptionId });\n    const createIntegration = useAccountIntegrationCreateIntegration<Operation>();\n    const deleteIntegration = useAccountIntegrationDeleteIntegration<Operation>();\n    const { waitForOperations, createLoader, removeLoader } = useLoader();\n    const { createError } = useError();\n    const [selectedCell, setSelectedCell] = React.useState<cells>(cells.INSTANCES);\n    const [addIntegrationOpen, setAddIntegrationOpen] = React.useState(false);\n\n    useEffect(() => {\n        if (integrations && integrations.data.items) {\n            const items = integrations.data.items;\n            setRows(items);\n        }\n    }, [integrations]);\n\n    const handleSelectAllCheck = (event: any) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((row) => row.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleCheck = (event: any, id: string) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected: string[] = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n\n    const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n    const handleRowDelete = async () => {\n        try {\n            createLoader();\n            let operationIds: string[] = [];\n            for (let i = 0; i < selected.length; i++) {\n                const response = await deleteIntegration.mutateAsync({ id: selected[i], accountId: userData.accountId, subscriptionId: userData.subscriptionId });    \n                operationIds.push(response.data.operationId);\n            }\n            await waitForOperations(operationIds);\n            reloadIntegrations();\n            setSelected([]);\n        } catch (e) {\n            createError(e.message);\n        } finally {\n            removeLoader();\n        }\n    }\n\n    const handleRowClick = (event: any, href: string) => {\n        // TODO: check if the user has auth to edit this row before sending him there, and if not send this error\n        // if (has auth) {\n        //     if (!event.target.id) {\n        //         window.location.href = href;\n        //     }\n        // } else {\n        //     createError(\"You don't have sufficient permissions to edit integration {integration}.  Please contact an account administrator.\");\n        // }\n        if (!event.target.id) {\n            window.location.href = href;\n        }\n    }\n\n    // const _createIntegration = async () => {\n    //     try {\n    //         createLoader();\n    //         const response = await createIntegration.mutateAsync({ id: String(new Date().getTime()), accountId: userData.accountId, subscriptionId: userData.subscriptionId });\n    //         await waitForOperations([response.data.operationId]);\n    //         reloadIntegrations();\n    //     } catch (e) {\n    //         createError(e.message);\n    //     } finally {\n    //         removeLoader();\n    //     }\n    // }\n\n    const handlePreviousCellSelect = () => {\n        if (selectedCell === cells.INSTANCES) {\n            setSelectedCell(cells.DEPLOYED);\n        } else if (selectedCell === cells.CREATED) {\n            setSelectedCell(cells.INSTANCES);\n        } else {\n            setSelectedCell(cells.CREATED);\n        }\n    }\n\n    const handleNextCellSelect = () => {\n        if (selectedCell === cells.INSTANCES) {\n            setSelectedCell(cells.CREATED);\n        } else if (selectedCell === cells.CREATED) {\n            setSelectedCell(cells.DEPLOYED);\n        } else {\n            setSelectedCell(cells.INSTANCES);\n        }\n    }\n\n    return (\n        <>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                open={addIntegrationOpen}\n                onClose={() => setAddIntegrationOpen(false)}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n            >\n                <AddIntegration open={addIntegrationOpen} onClose={() => setAddIntegrationOpen(false)} />\n            </Modal>\n            <SC.ButtonContainer>\n                <SC.ButtonMargin>\n                    <Button onClick={() => setAddIntegrationOpen(true)} startIcon={<AddIcon />} variant=\"outlined\" color=\"primary\" size=\"large\">New Integration</Button>\n                </SC.ButtonMargin>\n            </SC.ButtonContainer>\n            \n            <SC.DeleteWrapper active={selected.length > 0}>\n                {\n                    selected.length > 0 && (\n                        <>\n                            {selected.length} selected\n                            <SC.DeleteIconWrapper>\n                                <Tooltip title=\"Delete\">\n                                    <IconButton onClick={handleRowDelete}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </SC.DeleteIconWrapper>\n                        </>\n                    )\n                }\n            </SC.DeleteWrapper>\n            <SC.Table>\n                <Table size=\"small\" aria-label=\"Overview Table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell padding=\"checkbox\">\n                                <Checkbox\n                                    color=\"primary\"\n                                    checked={rows.length > 0 && selected.length === rows.length}\n                                    onChange={handleSelectAllCheck}\n                                    inputProps={{ 'aria-label': 'select all integrations' }}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <SC.Flex>\n                                    <SC.ArrowUp />\n                                    Name\n                                </SC.Flex>\n                            </TableCell>\n                            <TableCell align=\"left\">Instances</TableCell>\n                            <TableCell align=\"left\">Created</TableCell>\n                            <TableCell align=\"left\">Deployed</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => (\n                            <SC.Row key={row.id} onClick={(e) => handleRowClick(e, \"/integration/\" + row.id)}>\n                                <TableCell style={{ cursor: \"default\" }} padding=\"checkbox\" id={`enhanced-table-cell-checkbox-${row.id}`}>\n                                    <Checkbox\n                                        color=\"primary\"\n                                        onClick={(event) => handleCheck(event, row.id)}\n                                        checked={isSelected(row.id)}\n                                        inputProps={{ 'aria-labelledby': `enhanced-table-checkbox-${row.id}` }}\n                                        id={`enhanced-table-checkbox-${row.id}`}\n                                    />\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <SC.CellName>\n                                        {row.id}\n                                    </SC.CellName>\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    10\n                                    {// TODO: Replace placeholder with real data\n                                    }\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {new Date().toISOString().slice(0, 10)}\n                                    {// TODO: Replace placeholder with real data\n                                    }\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {new Date().toISOString().slice(0, 10)}\n                                    {// TODO: Replace placeholder with real data\n                                    }\n                                </TableCell>\n                            </SC.Row>\n                        ))}\n                    </TableBody>\n                </Table>\n            </SC.Table>\n            <SC.TableMobile>\n                <Table size=\"small\" aria-label=\"Overview Table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell padding=\"checkbox\">\n                                <Checkbox\n                                    color=\"primary\"\n                                    checked={rows.length > 0 && selected.length === rows.length}\n                                    onChange={handleSelectAllCheck}\n                                    inputProps={{ 'aria-label': 'select all integrations' }}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <SC.Flex>\n                                    <SC.ArrowUp />\n                                    Name\n                                </SC.Flex>\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                <SC.TableCellMobile>\n                                <p>{selectedCell}</p>\n                                    <SC.LeftArrow onClick={handlePreviousCellSelect} src={arrowLeft} alt=\"previous-cell\" height=\"16\" width=\"16\" />\n                                    \n                                    <SC.RightArrow onClick={handleNextCellSelect} src={arrowRight} alt=\"next-cell\" height=\"16\" width=\"16\" />\n                                </SC.TableCellMobile>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => (\n                            <SC.Row key={row.id} onClick={(e) => handleRowClick(e, \"/integration/\" + row.id)}>\n                                <TableCell style={{ cursor: \"default\" }} padding=\"checkbox\" id={`enhanced-table-cell-checkbox-${row.id}`}>\n                                    <Checkbox\n                                        color=\"primary\"\n                                        onClick={(event) => handleCheck(event, row.id)}\n                                        checked={isSelected(row.id)}\n                                        inputProps={{ 'aria-labelledby': `enhanced-table-checkbox-${row.id}` }}\n                                        id={`enhanced-table-checkbox-${row.id}`}\n                                    />\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <SC.CellName>\n                                        {row.id}\n                                    </SC.CellName>\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {selectedCell === cells.INSTANCES ? 10 : selectedCell === cells.DEPLOYED ? new Date().toISOString().slice(0, 10) : new Date().toISOString().slice(0, 10)}\n                                    {// TODO: Replace placeholder with real data\n                                    }\n                                </TableCell>\n                            </SC.Row>\n                        ))}\n                    </TableBody>\n                </Table>\n            </SC.TableMobile>\n        </>\n    )\n}\n\nexport default Overview;","/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Overview/styles.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Develop.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/styles.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Connect/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Connect/Connect.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Connect/styles.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/AuthCallback.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v1/account/user/useGetOne.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/useAxios.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/integration/useGetAll.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/integration/useCreateOne.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/connector/useGetOne.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/integration/useGetOne.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/connector/useGetAll.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/useLoader.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/integration/useDeleteOne.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/connector/useDeleteOne.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/connector/useCreateOne.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Edit/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Edit/Edit.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/IntegrationDetail/Develop/Edit/styles.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v1/account/user/useCreateToken.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v2/account/integration/useUpdateOne.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/api/v1/account/useGetOne.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/hooks/useError.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/LoggedOutErrorPage.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/LoggedOutError/LoggedOutError.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/LoggedOutError/styles.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/FatalError/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/FatalError/FatalError.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/FatalError/styles.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/AuthenticationPage.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Authentication/Authentication.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Authentication/Users/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Authentication/Users/Users.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Authentication/Users/styles.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/NotFoundPage.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/pages/FatalErrorPage.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Overview/AddIntegration/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Overview/AddIntegration/AddIntegration.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Integrations/Overview/AddIntegration/styles.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/static/feed.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Overview/AddConnector/index.ts",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Overview/AddConnector/AddConnector.tsx",[],"/Users/litebox/Documents/websites/portal.fusebit.io/src/components/Connectors/Overview/AddConnector/styles.ts",[],{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","severity":1,"message":"334","line":29,"column":11,"nodeType":"335","messageId":"336","endLine":29,"endColumn":26},{"ruleId":"333","severity":1,"message":"337","line":29,"column":11,"nodeType":"335","messageId":"336","endLine":29,"endColumn":28},"no-native-reassign",["338"],"no-negated-in-lhs",["339"],"@typescript-eslint/no-unused-vars","'createConnector' is assigned a value but never used.","Identifier","unusedVar","'createIntegration' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]